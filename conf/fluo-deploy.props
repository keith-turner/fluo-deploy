# Copyright 2014 Fluo authors (see AUTHORS)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[general]
# Cluster user name (install command will SSH to cluster using this user)
# Leave default below if launching cluster in AWS
cluster.username = ec2-user
# Cluster base directory where install/ & tarballs/ directories are created
# Leave default below if launching cluster in AWS
cluster.base.dir = /home/ec2-user
# Hostname of node that must direct installation of cluster.  Will be given Public IP if launching in EC2.
# If not launching in EC2, node must have Public IP that can be reached from your machine.
# Hostname can be chosen from "nodes" section below.
proxy.hostname = leader1
# If set, a SOCKS proxy will be created on the specified port when connecting to leader using 'fluo-deploy ssh <cluster>'
proxy.socks.port = 38585
# Specifies if SSH, Hosts, and .bashrc should be configured on cluster
configure.cluster = true
# Apache mirror to download Hadoop, Zookeeper, Accumulo
apache.mirror = http://www.gtlib.gatech.edu/pub/apache
# Accumulo Instance name
accumulo.instance = instance16
# Accumluo Password
accumulo.password = secret
# Software versions
fluo.version = 1.0.0-beta-1-SNAPSHOT
hadoop.version = 2.6.0
zookeeper.version = 3.4.6
#If the Accumulo version contains SNAPSHOT, then the scripts expect it to be in cluster/tarballs/ and will not try to download from a mirror.
accumulo.version = 1.6.2
# Software md5 checksums
hadoop.md5.hash = 37f371faab033bb8c2cb50100c5774dc
zookeeper.md5.hash = 971c379ba65714fd25dc5fe8f14e9ad1
#Accumulo hash is only checked if not a SNAPSHOT version.
accumulo.md5.hash = bbc6f15907330f5f292bae7ed0f02b2f

[ec2]
# EC2 region to connect to
region = us-east-1
# Type of AWS instance launched by default
default.instance.type = m3.xlarge
# Type of AWS instance launched for any node running 'worker' service
# Leave default below to use same instance type set by 'default.instance.type' property
worker.instance.type = %(default.instance.type)s
# VPC to launch instances in (optional)
vpc.id = XXXXXXXXX (this was set for test)
# VPC Subnet to launch instances in (optional)
subnet.id = XXXXXXXXX (this was set for test)
# Name of public key that will be loaded by Amazon on to your EC2 instances.
# You can upload and name your public key using the EC2 Management Console.
# Only the user with this key will be able to SSH to the cluster.
key.name = XXXXXXXXX
# Tags to add instances
#instance.tags = key1:value1,key2:value2
#Size in GB of EBS root device.  Set to 0 or don't set to use default.
ebs.root.size=0

[test]
###
# This section is used to configure Fluo 'test' applications which are indentified
# by a unique application name (which replaces <app> below).  Each test has the following
# configuration settings:
#
# <app>.repo                # Git repo containing code for test. It is cloned when the test is run.
# <app>.branch              # Branch to checkout in git repo
# <app>.command.pre.init    # Command in test repo to run before initializing and starting Fluo.
#                           # FLUO_HOME & FLUO_APP_NAME will be set in env when run.  This command
#                           # can do things like change fluo config and copy observers
# <app>.command.post.start  # Test script to run from test repo after Fluo is started
#
# Tests can be run using the following command 'fluo-deploy test <app>`
#
# Below is configuration for a 'stress' test which can be run using 'fluo-deploy test stress'
stress.repo=https://github.com/keith-turner/fluo-stress
stress.branch=beta-long-test-1
stress.command.pre.init=bin/configure-fluo.sh 
stress.command.post.start=bin/run-test.sh

[nodes]
# Describes nodes in cluster in the following format: 
# <Hostname> = <Instance Type>:<Service1>[,<Service2>,<Service3>]
# Where: 
#   Hostname = Must be unique.  Will be used for hostname in EC2 or should match hostname on your own cluster
#   Instance Type = EC2 instance type.  Ignored if not launching cluster.  Set to 'default' to use value set by 'default.instance.type'
#   Service = Service to run on node (possible values: zookeeper, namenode, resourcemanager, accumulomaster, worker, fluo)
leader1 = zookeeper,accumulomaster,dev,fluo
leader2 = zookeeper,namenode,resourcemanager
leader3 = zookeeper,graphite
worker1 = worker
worker2 = worker
worker3 = worker
worker4 = worker
worker5 = worker
worker6 = worker
worker7 = worker
worker8 = worker
worker10 = worker
worker11 = worker
worker12 = worker
worker13 = worker
worker14 = worker
worker15 = worker
worker16 = worker
worker17 = worker
